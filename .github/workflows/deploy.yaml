name: Deploy AKS Kafka Postgres App with Istio + Cloudflare + TLS

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    # âœ… allows manual trigger from GitHub UI

env:
  TF_DIR: ./terraform
  K8S_DIR: ./k8s
  ACR_NAME: aiinfraacr2901
  ACR_LOGIN_SERVER: aiinfraacr2901.azurecr.io

  # ARM vars for Terraform + Azure CLI
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

  # Cloudflare
  CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
  CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: ${{ env.TF_DIR }}
      run: terraform init

    - name: Terraform Apply
      working-directory: ${{ env.TF_DIR }}
      run: terraform apply -auto-approve

    # Setup kubectl
    - name: Setup kubectl
      uses: azure/setup-kubectl@v4

    - name: Get AKS Credentials
      run: |
        az login --service-principal \
          --username $ARM_CLIENT_ID \
          --password $ARM_CLIENT_SECRET \
          --tenant $ARM_TENANT_ID
        az aks get-credentials \
          --resource-group rg-kafka-postgres-demo \
          --name aks-kafka-postgres \
          --overwrite-existing

    # ACR Login
    - name: ACR Login
      run: az acr login --name $ACR_NAME

    # Build & Push Images
    - name: Build & Push Images
      run: |
        set -e
        for svc in order-api payment-service inventory-service notification-service analytics-service; do
          docker build -t $ACR_LOGIN_SERVER/$svc:latest ./services/$svc
          docker push $ACR_LOGIN_SERVER/$svc:latest
        done

    # --- Install Istio ---
    - name: Install Istio
      run: |
        curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.22.0 sh -
        export PATH=$PWD/istio-1.22.0/bin:$PATH
        istioctl install --set profile=demo -y
        kubectl label namespace default istio-injection=enabled --overwrite
        kubectl label namespace kafka istio-injection
